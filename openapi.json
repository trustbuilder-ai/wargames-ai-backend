{
  "openapi": "3.1.0",
  "info": {
    "title": "Backend API with Supabase Auth",
    "version": "1.0.0",
    "description": "Backend API with Supabase Authentication"
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create User",
        "description": "Create a new user",
        "operationId": "create_user_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tournaments": {
      "get": {
        "summary": "List Tournaments",
        "description": "List tournaments with filtering",
        "operationId": "list_tournaments_tournaments_get",
        "parameters": [
          {
            "name": "selection_filter",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SelectionFilter",
              "default": "ACTIVE"
            }
          },
          {
            "name": "page_index",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page Index"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tournaments"
                  },
                  "title": "Response List Tournaments Tournaments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tournaments/{tournament_id}": {
      "get": {
        "summary": "Get Tournament",
        "description": "Get a specific tournament",
        "operationId": "get_tournament_tournaments__tournament_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tournament_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tournament Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournaments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/badges": {
      "get": {
        "summary": "List Badges",
        "description": "List badges, optionally filtered to user's badges only",
        "operationId": "list_badges_badges_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_badges_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "User Badges Only"
            }
          },
          {
            "name": "page_index",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page Index"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Badges"
                  },
                  "title": "Response List Badges Badges Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/badges/{badge_id}": {
      "get": {
        "summary": "Get Badge",
        "description": "Get a specific badge",
        "operationId": "get_badge_badges__badge_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "badge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Badge Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Badges"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/challenges": {
      "get": {
        "summary": "List Challenges",
        "description": "List challenges with filtering",
        "operationId": "list_challenges_challenges_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tournament_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tournament Id"
            }
          },
          {
            "name": "page_index",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page Index"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Count"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Challenges"
                  },
                  "title": "Response List Challenges Challenges Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/challenges/{challenge_id}/start": {
      "post": {
        "summary": "Start Challenge",
        "description": "Start a challenge for the current user",
        "operationId": "start_challenge_challenges__challenge_id__start_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Challenge Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/challenges/{challenge_id}/submit_message": {
      "post": {
        "summary": "Submit Message To Challenge",
        "description": "Submit a message to the challenge agent",
        "operationId": "submit_message_to_challenge_challenges__challenge_id__submit_message_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Challenge Id"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserChallengeContexts"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Submit Message To Challenge Challenges  Challenge Id  Submit Message Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tournaments/{tournament_id}/join": {
      "post": {
        "summary": "Join Tournament",
        "description": "Join a tournament",
        "operationId": "join_tournament_tournaments__tournament_id__join_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tournament_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tournament Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get Current User Info",
        "description": "Get current user information",
        "operationId": "get_current_user_info_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/challenges/{challenge_id}/context": {
      "get": {
        "summary": "Get Challenge Context",
        "description": "Get challenge context for current user",
        "operationId": "get_challenge_context_challenges__challenge_id__context_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "challenge_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Challenge Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeContextResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health_check": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint",
        "operationId": "health_check_health_check_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Badges": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "challenge_id": {
            "type": "integer",
            "title": "Challenge Id"
          }
        },
        "type": "object",
        "required": [
          "challenge_id"
        ],
        "title": "Badges"
      },
      "ChallengeContextResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "can_contribute": {
            "type": "boolean",
            "title": "Can Contribute"
          },
          "challenge_id": {
            "type": "integer",
            "title": "Challenge Id"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "letta_agent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Letta Agent Id"
          },
          "succeeded_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Succeeded At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "can_contribute",
          "challenge_id",
          "started_at",
          "user_id"
        ],
        "title": "ChallengeContextResponse"
      },
      "Challenges": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tournament_id": {
            "type": "integer",
            "title": "Tournament Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tools_available": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools Available"
          },
          "tool_calls_success_criteria": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls Success Criteria"
          }
        },
        "type": "object",
        "required": [
          "name",
          "tournament_id"
        ],
        "title": "Challenges"
      },
      "CreateUserRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "CreateUserRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "SelectionFilter": {
        "type": "string",
        "enum": [
          "PAST",
          "ACTIVE",
          "FUTURE",
          "PAST_AND_ACTIVE",
          "ACTIVE_AND_FUTURE"
        ],
        "title": "SelectionFilter"
      },
      "Tournaments": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_date",
          "end_date"
        ],
        "title": "Tournaments"
      },
      "UserChallengeContexts": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "can_contribute": {
            "type": "boolean",
            "title": "Can Contribute"
          },
          "challenge_id": {
            "type": "integer",
            "title": "Challenge Id"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "letta_agent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Letta Agent Id"
          },
          "succeeded_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Succeeded At"
          }
        },
        "type": "object",
        "required": [
          "can_contribute",
          "challenge_id",
          "started_at",
          "user_id"
        ],
        "title": "UserChallengeContexts"
      },
      "UserInfo": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "active_tournaments": {
            "items": {
              "$ref": "#/components/schemas/Tournaments"
            },
            "type": "array",
            "title": "Active Tournaments"
          },
          "active_challenges": {
            "items": {
              "$ref": "#/components/schemas/Challenges"
            },
            "type": "array",
            "title": "Active Challenges"
          },
          "badges": {
            "items": {
              "$ref": "#/components/schemas/Badges"
            },
            "type": "array",
            "title": "Badges"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "active_tournaments",
          "active_challenges",
          "badges"
        ],
        "title": "UserInfo",
        "description": "Represents a user's information including active tournaments, challenges, and badges."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}